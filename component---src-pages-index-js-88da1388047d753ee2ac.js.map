{"version":3,"sources":["webpack:///./src/components/Card.js","webpack:///./src/components/Projects.js","webpack:///./src/pages/index.js"],"names":["props","project","className","title","description","alt","src","img","links","map","link","key","href","projects","Card","Index","Container","Music","Projects"],"mappings":"2HAEe,WAACA,GAAW,IAClBC,EAAYD,EAAZC,QACR,OACC,yBAAKC,UAAU,YACd,yBAAKA,UAAU,sBACd,wBAAIA,UAAU,UAAUD,EAAQE,OAChC,uBAAGD,UAAU,QAAQD,EAAQG,cAE9B,yBAAKF,UAAU,mCACd,yBAAKA,UAAU,eACd,yBAAKA,UAAU,MAAMG,IAAI,YAAYC,IAAKL,EAAQM,OAEnD,yBAAKL,UAAU,aACbD,EAAQO,MAAMC,KAAI,SAACC,GAAD,OAClB,uBAAGC,IAAKD,EAAKE,KAAMV,UAAU,gBAAgBU,KAAMF,EAAKE,MACtDF,EAAKP,cCdPU,EAAW,CAAC,CAChBV,MAAO,SACPC,YAAa,kNAIbI,MAAO,CACL,CACEL,MAAO,eACPS,KAAM,2CAER,CACET,MAAO,cACPS,KAAM,0CAGVL,IAAK,iBAEP,CACEJ,MAAO,WACPC,YAAa,sMAIbI,MAAO,CACL,CACEL,MAAO,eACPS,KAAM,6CAER,CACET,MAAO,cACPS,KAAM,4CAGVL,IAAK,iBAEP,CACEJ,MAAO,kBACPC,YAAa,4QAIbI,MAAO,CACL,CACEL,MAAO,cACPS,KAAM,mDAGVL,IAAK,kBAEP,CACEJ,MAAO,eACPC,YAAa,4OAIbI,MAAO,CACL,CACEL,MAAO,cACPS,KAAM,gDAGVL,IAAK,iBAEP,CACEJ,MAAO,iBACPC,YAAa,mLAGbI,MAAO,CACL,CACEL,MAAO,cACPS,KAAM,kDAGVL,IAAK,iBAEP,CACEJ,MAAO,qBACPC,YAAa,8GAEbI,MAAO,CACL,CACEL,MAAO,cACPS,KAAM,sDAGVL,IAAK,oBAIQ,aACb,OACE,yBAAKL,UAAU,WACb,yBAAKA,UAAU,aACb,yCAEDW,EAASJ,KAAI,SAAAR,GAAO,OACnB,kBAACa,EAAD,CAAMH,IAAKV,EAAQE,MAAOF,QAASA,S,wBCvE5Bc,UAzBD,WACZ,OACC,kBAACC,EAAA,EAAD,KACC,yBAAKd,UAAU,gCACd,yBAAKA,UAAU,WACd,yBAAKA,UAAU,aACd,yCAED,uBAAGA,UAAU,+CAAb,+BAC6B,uBAAGU,KAAK,qBAAR,SAD7B,qZAUD,kBAACK,EAAA,EAAD,MACA,kBAACC,EAAD","file":"component---src-pages-index-js-88da1388047d753ee2ac.js","sourcesContent":["import React from 'react';\n\nexport default (props) => {\n\tconst { project } = props;\n\treturn (\n\t\t<div className=\"row card\">\n\t\t\t<div className=\"col-xs-12 col-sm-6\">\n\t\t\t\t<h3 className=\"header\">{project.title}</h3>\n\t\t\t\t<p className=\"text\">{project.description}</p>\n\t\t\t</div>\n\t\t\t<div className=\"col-xs-12 col-sm-6 link-wrapper\">\n\t\t\t\t<div className=\"img-wrapper\">\n\t\t\t\t\t<img className=\"img\" alt=\"lang-logo\" src={project.img} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"links row\">\n\t\t\t\t\t{project.links.map((link) => (\n\t\t\t\t\t\t<a key={link.href} className=\"col-xs-6 text\" href={link.href}>\n\t\t\t\t\t\t\t{link.title}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import React from \"react\"\nimport Card from './Card'\n\nconst projects = [{\n  title: 'Bitlib',\n  description: 'An OCaml library to aid users in writing binary files.' +\n    'This library is particularly useful for bytecode compilers ' +\n    'when the user needs to convert decimals to binary sequences of ' +\n    'certain lengths and endianness.',\n  links: [\n    {\n      title: 'OPAM Package',\n      href: 'https://opam.ocaml.org/packages/bitlib/'\n    },\n    {\n      title: 'Source Code',\n      href: 'https://github.com/chrisnevers/bitlib'\n    }\n  ],\n  img: 'img/ocaml.png'\n},\n{\n  title: 'OCamline',\n  description: 'An OCaml library that provides a simple interface for ' +\n    'reading user input. This project is particularly useful for REPLs. ' +\n    'The user may specifiy brackets that must be closed before accepting ' +\n    'input.',\n  links: [\n    {\n      title: 'OPAM Package',\n      href: 'https://opam.ocaml.org/packages/ocamline/'\n    },\n    {\n      title: 'Source Code',\n      href: 'https://github.com/chrisnevers/ocamline'\n    }\n  ],\n  img: 'img/ocaml.png'\n},\n{\n  title: 'Racket Compiler',\n  description: 'A compiler for a statically typed language that produces x86 ' +\n    'assembly. Features include: hygienic macros, garbage collection, ' +\n    'register allocation, functions, closures, parametric polymorphism, ' +\n    ' generalized algebraic data types, vectors, arrays, control flow, etc...',\n  links: [\n    {\n      title: 'Source Code',\n      href: 'https://github.com/chrisnevers/racket-compiler'\n    }\n  ],\n  img: 'img/racket.png'\n},\n{\n  title: 'JIT Compiler',\n  description: 'A byte-code compiler for a small lazy language and its ' +\n    'corresponding virtual machine. The VM is based on a CEK machine and has a ' +\n    'stop and copy garbage collector included. The compiler is written in OCaml ' +\n    'and the VM is written in C++.',\n  links: [\n    {\n      title: 'Source Code',\n      href: 'https://github.com/chrisnevers/jit-compiler'\n    }\n  ],\n  img: 'img/ocaml.png'\n},\n{\n  title: 'Type Inference',\n  description: 'An implementation of Algorithm W, which performs type inference ' +\n    'on an ML language. This algorithm generalizes functions without explicit ' +\n    'parameterization. Implemented in OCaml.',\n  links: [\n    {\n      title: 'Source Code',\n      href: 'https://github.com/chrisnevers/type-inference'\n    }\n  ],\n  img: 'img/ocaml.png'\n},\n{\n  title: 'Scheme Interpreter',\n  description: 'An implementation of a Scheme interpreter, as described in ' +\n    'Write Yourself a Scheme. Implemented in Haskell.',\n  links: [\n    {\n      title: 'Source Code',\n      href: 'https://github.com/chrisnevers/scheme-interpreter'\n    }\n  ],\n  img: 'img/haskell.png'\n}\n]\n\nexport default () => {\n  return (\n    <div className=\"section\">\n      <div className=\"col-lg-12\">\n        <h1>Projects</h1>\n      </div>\n      {projects.map(project => (\n        <Card key={project.title} project={project} />\n      ))}\n    </div>\n  );\n}\n","import React from 'react';\nimport Projects from '../components/Projects';\nimport Music from '../components/Music';\nimport Container from '../components/Container';\n\nconst Index = () => {\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<div className=\"col-xs-12 col-sm-12 col-md-8\">\n\t\t\t\t\t<div className=\"section\">\n\t\t\t\t\t\t<div className=\"col-lg-12\">\n\t\t\t\t\t\t\t<h1>About Me</h1>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<p className=\"about-me-text col-xs-12 col-sm-12 col-md-10\">\n\t\t\t\t\t\t\tI am a software engineer at <a href=\"https://reach.sh/\">Reach</a>.\n\t\t\t\t\t\t\tI am particularly interested in compilers\n\t\t\t\t\t\t\tand statically typed, functional programming languages. I graduated from UMass Lowell\n\t\t\t\t\t\t\twith a Bachelors in Computer Science. In my free time,\n\t\t\t\t\t\t\tI enjoy composing/playing music on guitar and piano. I'm really\n\t\t\t\t\t\t\tinterested in harmony and writing cool non-diatonic progressions.\n\t\t\t\t\t\t\tI also like reading philosophy, horror & poetry, and spending time with my bunnies üê∞\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Music />\n\t\t\t\t\t<Projects />\n\t\t\t\t</div>\n\t\t\t</Container>\n\t\t);\n}\n\nexport default Index;\n"],"sourceRoot":""}