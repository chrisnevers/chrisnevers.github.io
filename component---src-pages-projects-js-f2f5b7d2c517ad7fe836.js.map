{"version":3,"sources":["webpack:///./src/pages/Card.js","webpack:///./src/pages/Projects.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","props","project","a","createElement","class","className","title","description","src","img","links","map","link","href","_Card__WEBPACK_IMPORTED_MODULE_1__","projects"],"mappings":"4FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAEeD,EAAA,iBAACI,GAAU,IAChBC,EAAYD,EAAZC,QACR,OACEH,EAAAI,EAAAC,cAAA,OAAKC,MAAM,qBACTN,EAAAI,EAAAC,cAAA,OAAKE,UAAU,sBACbP,EAAAI,EAAAC,cAAA,MAAIE,UAAU,UAAUJ,EAAQK,OAChCR,EAAAI,EAAAC,cAAA,KAAGE,UAAU,QACVJ,EAAQM,cAGbT,EAAAI,EAAAC,cAAA,OAAKE,UAAU,mCACbP,EAAAI,EAAAC,cAAA,OAAKE,UAAU,eACbP,EAAAI,EAAAC,cAAA,OAAKE,UAAU,MAAMG,IAAKP,EAAQQ,OAEpCX,EAAAI,EAAAC,cAAA,OAAKE,UAAU,aACZJ,EAAQS,MAAMC,IAAI,SAAAC,GAAI,OACrBd,EAAAI,EAAAC,cAAA,KACEE,UAAU,gBACVQ,KAAMD,EAAKC,MAEVD,EAAKN,+CCtBpBZ,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAiB,EAAApB,EAAA,KAGMqB,EAAW,CAAC,CAChBT,MAAO,SACPC,YAAa,kNAIbG,MAAO,CACL,CACEJ,MAAO,eACPO,KAAM,2CAER,CACEP,MAAO,cACPO,KAAM,0CAGVJ,IAAK,iBAEP,CACEH,MAAO,kBACPC,YAAa,4QAIbG,MAAO,CACL,CACEJ,MAAO,cACPO,KAAM,mDAGVJ,IAAK,kBAEP,CACEH,MAAO,eACPC,YAAa,4OAIbG,MAAO,CACL,CACEJ,MAAO,cACPO,KAAM,gDAGVJ,IAAK,iBAEP,CACEH,MAAO,iBACPC,YAAa,mLAGbG,MAAO,CACL,CACEJ,MAAO,cACPO,KAAM,kDAGVJ,IAAK,kBAIQb,EAAA,mBACb,OACEE,EAAAI,EAAAC,cAAA,OAAKE,UAAU,kCACbP,EAAAI,EAAAC,cAAA,OAAKE,UAAU,aACbP,EAAAI,EAAAC,cAAA,uBAEDY,EAASJ,IAAI,SAAAV,GAAO,OACnBH,EAAAI,EAAAC,cAACW,EAAA,QAAD,CAAMb,QAASA","file":"component---src-pages-projects-js-f2f5b7d2c517ad7fe836.js","sourcesContent":["import React from \"react\"\n\nexport default (props) => {\n  const { project } = props;\n  return (\n    <div class=\"bg-light row card\">\n      <div className=\"col-xs-12 col-sm-6\">\n        <h3 className=\"header\">{project.title}</h3>\n        <p className=\"text\">\n          {project.description}\n        </p>\n      </div>\n      <div className=\"col-xs-12 col-sm-6 link-wrapper\">\n        <div className=\"img-wrapper\">\n          <img className=\"img\" src={project.img}/>\n        </div>\n        <div className=\"links row\">\n          {project.links.map(link => (\n            <a\n              className=\"col-xs-6 text\"\n              href={link.href}\n            >\n              {link.title}\n            </a>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\"\nimport Card from './Card'\n\nconst projects = [{\n  title: 'Bitlib',\n  description: 'An OCaml library to aid users in writing binary files.' +\n    'This library is particularly useful for bytecode compilers ' +\n    'when the user needs to convert decimals to binary sequences of ' +\n    'certain lengths and endianness.',\n  links: [\n    {\n      title: 'OPAM Package',\n      href: 'https://opam.ocaml.org/packages/bitlib/'\n    },\n    {\n      title: 'Source Code',\n      href: 'https://github.com/chrisnevers/bitlib'\n    }\n  ],\n  img: 'img/ocaml.png'\n},\n{\n  title: 'Racket Compiler',\n  description: 'A compiler for a statically typed language that produces x86 ' +\n    'assembly. Features include: hygienic macros, garbage collection, ' +\n    'register allocation, functions, closures, parametric polymorphism, ' +\n    ' generalized algebraic data types, vectors, arrays, control flow, etc...',\n  links: [\n    {\n      title: 'Source Code',\n      href: 'https://github.com/chrisnevers/racket-compiler'\n    }\n  ],\n  img: 'img/racket.png'\n},\n{\n  title: 'JIT Compiler',\n  description: 'A byte-code compiler for a small lazy language and its ' +\n    'corresponding virtual machine. The VM is based on a CEK machine and has a ' +\n    'stop and copy garbage collector included. The compiler is written in OCaml ' +\n    'and the VM is written in C++.',\n  links: [\n    {\n      title: 'Source Code',\n      href: 'https://github.com/chrisnevers/jit-compiler'\n    }\n  ],\n  img: 'img/ocaml.png'\n},\n{\n  title: 'Type Inference',\n  description: 'An implementation of Algorithm W, which performs type inference ' +\n    'on an ML language. This algorithm generalizes functions without explicit ' +\n    'parameterization. Implemented in OCaml.',\n  links: [\n    {\n      title: 'Source Code',\n      href: 'https://github.com/chrisnevers/type-inference'\n    }\n  ],\n  img: 'img/ocaml.png'\n}\n]\n\nexport default () => {\n  return (\n    <div className=\"section row col-xs-12 col-sm-8\">\n      <div className=\"col-lg-12\">\n        <h1>Projects</h1>\n      </div>\n      {projects.map(project => (\n        <Card project={project} />\n      ))}\n    </div>\n  );\n}\n"],"sourceRoot":""}